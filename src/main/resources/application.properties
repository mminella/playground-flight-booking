###################
# OpenAI
###################

spring.ai.openai.api-key=${OPENAI_API_KEY}
#For TAS Dhaka (very slow and doesn't seem to work 100% with context
spring.ai.openai.chat.options.model=gpt-3.5-turbo
# For localhost against ChatGPT
#spring.ai.openai.chat.options.model=gpt-4-turbo-preview
spring.ai.openai.chat.options.functions=getBookingDetails,changeBooking,cancelBooking

# spring.ai.openai.chat.enabled=false

# Disable the OpenAI embedding when the local huggingface embedding (e.g. spring-ai-transformers-spring-boot-starter) is used.
# spring.ai.openai.embedding.enabled=false

###################
# Mistral AI
###################

# spring.ai.mistralai.api-key=${MISTRAL_AI_API_KEY}
# spring.ai.mistralai.chat.options.model=mistral-small-latest
# # spring.ai.mistralai.chat.options.model=mistral-large-latest
# spring.ai.mistralai.chat.options.functions=getBookingDetails,changeBooking,cancelBooking
# # spring.ai.retry.on-client-errors=true
# # spring.ai.retry.exclude-on-http-codes=429

###################
# Vertex AI Gemini
###################

# spring.ai.vertex.ai.gemini.project-id=${VERTEX_AI_GEMINI_PROJECT_ID}
# spring.ai.vertex.ai.gemini.location=${VERTEX_AI_GEMINI_LOCATION}
# spring.ai.vertex.ai.gemini.chat.options.model=gemini-pro
# spring.ai.vertex.ai.gemini.chat.options.functions=getBookingDetails,changeBooking,cancelBooking
# spring.ai.vertex.ai.gemini.chat.options.transport-type=REST

###################
#  Vector Store (Milvus)
###################

# Change the dimentions to 384 if the local huggingface embedding (e.g. spring-ai-transformers-spring-boot-starter) is used.
# spring.ai.vectorstore.milvus.embedding-dimension=384
